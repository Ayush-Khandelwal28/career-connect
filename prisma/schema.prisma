datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  password     String
  name         String
  role         Role
  resume       Resume?
  jobs         Job[]         @relation("PostedJobs") 
  applications Application[] 
}

enum Role {
  JOB_SEEKER
  RECRUITER
}

model Job {
  id          Int           @id @default(autoincrement())
  title       String
  description String        @db.Text
  location    String
  type        JobType
  workMode    WorkMode
  minSalary   Float
  maxSalary   Float
  salaryType  SalaryType
  datePosted  DateTime      @default(now())
  recruiter   User          @relation("PostedJobs", fields: [recruiterId], references: [id])
  recruiterId Int
  applicants  Application[] 
}

enum JobType {
  FULL_TIME
  PART_TIME
  CONTRACT
  INTERNSHIP
}

enum WorkMode {
  ONSITE
  REMOTE
  HYBRID
}

enum SalaryType {
  YEARLY
  MONTHLY
}

model Application {
  id          Int       @id @default(autoincrement())
  job         Job       @relation(fields: [jobId], references: [id])
  jobId       Int
  applicant   User      @relation(fields: [applicantId], references: [id])
  applicantId Int
  email       String
  phone       String
  coverLetter String
  resumeLink  String    
  createdAt   DateTime  @default(now())
}

model Resume {
  id                Int               @id @default(autoincrement())
  userId            Int               @unique
  user              User              @relation(fields: [userId], references: [id])
  careerObjective   CareerObjective[]
  education         Education[]
  workExperience    WorkExperience[]
  projects          Project[]
  achievements      Achievement[]
  skills            Skill[]
}

model CareerObjective {
  id          Int     @id @default(autoincrement())
  objective   String
  resume      Resume  @relation(fields: [resumeId], references: [id])
  resumeId    Int
}

model Education {
  id             Int     @id @default(autoincrement())
  collegeName    String
  degreeName     String
  courseName     String
  courseStartYear String
  courseEndYear  String
  currentGPA     String
  resume         Resume  @relation(fields: [resumeId], references: [id])
  resumeId       Int
}

model WorkExperience {
  id              Int     @id @default(autoincrement())
  role            String
  organizationName String
  startMonth      String
  startYear       String
  endMonth        String
  endYear         String
  description     String
  stillWorking    Boolean
  resume          Resume  @relation(fields: [resumeId], references: [id])
  resumeId        Int
}

model Project {
  id               Int     @id @default(autoincrement())
  projectName      String
  projectDescription String
  projectLink      String
  month            String
  year             String
  resume           Resume  @relation(fields: [resumeId], references: [id])
  resumeId         Int
}

model Achievement {
  id          Int     @id @default(autoincrement())
  achievement String
  resume      Resume  @relation(fields: [resumeId], references: [id])
  resumeId    Int
}

model Skill {
  id        Int     @id @default(autoincrement())
  skill     String
  resume    Resume  @relation(fields: [resumeId], references: [id])
  resumeId  Int
}
